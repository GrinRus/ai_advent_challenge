services:
  postgres:
    image: pgvector/pgvector:pg15
    container_name: ai-advent-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ai_advent}
      POSTGRES_USER: ${POSTGRES_USER:-ai_advent}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ai_advent}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: ai-advent-redis
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "${REDIS_PORT:-6380}:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
    image: ai-advent/backend:latest
    container_name: ai-advent-backend
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      agent-ops-mcp:
        condition: service_healthy
      flow-ops-mcp:
        condition: service_healthy
      insight-mcp:
        condition: service_healthy
      github-mcp:
        condition: service_healthy
      docker-runner-mcp:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: prod
      AGENT_OPS_MCP_HTTP_BASE_URL: ${AGENT_OPS_MCP_HTTP_BASE_URL:-http://agent-ops-mcp:8080}
      FLOW_OPS_MCP_HTTP_BASE_URL: ${FLOW_OPS_MCP_HTTP_BASE_URL:-http://flow-ops-mcp:8080}
      INSIGHT_MCP_HTTP_BASE_URL: ${INSIGHT_MCP_HTTP_BASE_URL:-http://insight-mcp:8080}
      GITHUB_MCP_HTTP_BASE_URL: ${GITHUB_MCP_HTTP_BASE_URL:-http://github-mcp:8080}
      DOCKER_MCP_HTTP_BASE_URL: ${DOCKER_MCP_HTTP_BASE_URL:-http://docker-runner-mcp:8080}
    ports:
      - "8080:8080"

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-/api}
    image: ai-advent/frontend:latest
    container_name: ai-advent-frontend
    depends_on:
      - backend
    ports:
      - "4179:4179"

  agent-ops-mcp:
    build:
      context: ./backend-mcp
    image: ai-advent/agent-ops-mcp:latest
    container_name: ai-advent-agent-ops-mcp
    environment:
      SPRING_MAIN_APPLICATION_CLASS: com.aiadvent.backend.mcp.AgentOpsMcpApplication
      SPRING_PROFILES_ACTIVE: agentops
      AGENT_OPS_BACKEND_BASE_URL: ${AGENT_OPS_BACKEND_BASE_URL:-http://backend:8080}
      AGENT_OPS_BACKEND_API_TOKEN: ${AGENT_OPS_BACKEND_API_TOKEN:-}
    ports:
      - "${AGENT_OPS_MCP_HTTP_PORT:-7091}:8080"
    stdin_open: true
    tty: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f AgentOpsMcpApplication >/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 3

  flow-ops-mcp:
    build:
      context: ./backend-mcp
    image: ai-advent/flow-ops-mcp:latest
    container_name: ai-advent-flow-ops-mcp
    environment:
      SPRING_MAIN_APPLICATION_CLASS: com.aiadvent.backend.mcp.FlowOpsMcpApplication
      SPRING_PROFILES_ACTIVE: flowops
      FLOW_OPS_BACKEND_BASE_URL: ${FLOW_OPS_BACKEND_BASE_URL:-http://backend:8080}
      FLOW_OPS_BACKEND_API_TOKEN: ${FLOW_OPS_BACKEND_API_TOKEN:-}
    ports:
      - "${FLOW_OPS_MCP_HTTP_PORT:-7092}:8080"
    stdin_open: true
    tty: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f FlowOpsMcpApplication >/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 3

  insight-mcp:
    build:
      context: ./backend-mcp
    image: ai-advent/insight-mcp:latest
    container_name: ai-advent-insight-mcp
    environment:
      SPRING_MAIN_APPLICATION_CLASS: com.aiadvent.backend.mcp.InsightMcpApplication
      SPRING_PROFILES_ACTIVE: insight
      INSIGHT_BACKEND_BASE_URL: ${INSIGHT_BACKEND_BASE_URL:-http://backend:8080}
      INSIGHT_BACKEND_API_TOKEN: ${INSIGHT_BACKEND_API_TOKEN:-}
    ports:
      - "${INSIGHT_MCP_HTTP_PORT:-7093}:8080"
    stdin_open: true
    tty: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f InsightMcpApplication >/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 3

  github-mcp:
    build:
      context: ./backend-mcp
    image: ai-advent/github-mcp:latest
    container_name: ai-advent-github-mcp
    env_file:
      - .env
    environment:
      SPRING_MAIN_APPLICATION_CLASS: com.aiadvent.mcp.backend.McpApplication
      SPRING_PROFILES_ACTIVE: github
      GITHUB_API_BASE_URL: ${GITHUB_API_BASE_URL:-https://api.github.com}
    ports:
      - "${GITHUB_MCP_HTTP_PORT:-7094}:8080"
    stdin_open: true
    tty: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f McpApplication >/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 3

  docker-runner-mcp:
    build:
      context: ./backend-mcp
    image: ai-advent/docker-runner-mcp:latest
    container_name: ai-advent-docker-runner-mcp
    env_file:
      - .env
    environment:
      SPRING_MAIN_APPLICATION_CLASS: com.aiadvent.mcp.backend.McpApplication
      SPRING_PROFILES_ACTIVE: docker
      DOCKER_RUNNER_WORKSPACE_ROOT: ${DOCKER_RUNNER_WORKSPACE_ROOT:-/var/tmp/aiadvent/mcp-workspaces}
      DOCKER_RUNNER_GRADLE_CACHE_PATH: ${DOCKER_RUNNER_GRADLE_CACHE_PATH:-/var/tmp/aiadvent/gradle-cache}
      DOCKER_RUNNER_ENABLE_NETWORK: ${DOCKER_RUNNER_ENABLE_NETWORK:-false}
      DOCKER_RUNNER_IMAGE: ${DOCKER_RUNNER_IMAGE:-aiadvent/mcp-gradle-runner:latest}
      DOCKER_RUNNER_TIMEOUT: ${DOCKER_RUNNER_TIMEOUT:-PT15M}
    ports:
      - "${DOCKER_MCP_HTTP_PORT:-7095}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - docker_runner_workspaces:/var/tmp/aiadvent/mcp-workspaces
      - docker_runner_gradle_cache:/var/tmp/aiadvent/gradle-cache
    stdin_open: true
    tty: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f McpApplication >/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  docker_runner_workspaces:
  docker_runner_gradle_cache:
